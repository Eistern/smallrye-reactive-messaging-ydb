[ {
  "extension" : "revapi.java",
  "id" : "java",
  "configuration" : {
    "missing-classes" : {
      "behavior" : "report",
      "ignoreMissingAnnotations" : false
    }
  }
}, {
  "extension" : "revapi.filter",
  "configuration" : {
    "elements" : {
      "include" : [ {
        "matcher" : "java-package",
        "match" : "io.smallrye.reactive.messaging.kafka"
      } ]
    }
  }
}, {
  "extension" : "revapi.differences",
  "id" : "breaking-changes",
  "configuration" : {
    "criticality" : "highlight",
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "differences" : [
        {
            "ignore": true,
            "code": "java.class.nonPublicPartOfAPI",
            "old": "class io.smallrye.reactive.messaging.kafka.commit.KafkaCheckpointCommit.CheckpointState<T>",
            "new": "class io.smallrye.reactive.messaging.kafka.commit.KafkaCheckpointCommit.CheckpointState<T>",
            "justification": "New checkpointing API"
        },
        {
            "code": "java.method.removed",
            "old": "method void io.smallrye.reactive.messaging.kafka.impl.KafkaRecordHelper::createOutgoingTrace(org.eclipse.microprofile.reactive.messaging.Message<?>, java.lang.String, java.lang.Integer, org.apache.kafka.common.header.Headers)",
            "justification": "Tracing methods moved to separate otel module"
        },
        {
            "code": "java.method.removed",
            "old": "method java.util.Set<java.lang.String> io.smallrye.reactive.messaging.kafka.impl.KafkaSource<K, V>::getSubscribedTopics()",
            "justification": "Removed unused method"
        },
        {
            "code": "java.class.removed",
            "old": "class io.smallrye.reactive.messaging.kafka.tracing.HeaderExtractAdapter",
            "justification": "Replaced by otel instrumentation api"
        },
        {
            "code": "java.class.removed",
            "old": "class io.smallrye.reactive.messaging.kafka.tracing.HeaderInjectAdapter",
            "justification": "Replaced by otel instrumentation api"
        }
    ]
  }
}, {
  "extension" : "revapi.reporter.json",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "target/compatibility.json",
    "indent" : true,
    "append" : false,
    "keepEmptyFile" : true
  }
}, {
  "extension" : "revapi.reporter.text",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "out"
  }
} ]
